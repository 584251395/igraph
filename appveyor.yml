# This file is based on one which was automatically generated by conda-smithy
# and the one in matplotlib.
#
# It uses conda environment to get the build dependencies for a full windows
# build, both the "normal" one and the msvc based one.
#
# We are using conda with Python 3.5 because Python requires MSVC 14 from
# version 3.5 onwards so it does not matter which Python version we pick as
# long as it's later than 3.5.

environment:
  PATH: C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\Windows\System32;C:\Windows;%PATH%
  MSYSTEM: MINGW64
  TARGET_ARCH: "x64"

  matrix:
    - MSVC_VERSION: "14"
      PYTHON_VERSION: "3.5"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"
    - MSVC_VERSION: "NONE"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

init:
  - cmd: "ECHO MSVC_VERSION=%MSVC_VERSION% CONDA_INSTALL_LOCN=%CONDA_INSTALL_LOCN%"

# all our builds have to happen in install...
build: false

install:
    # setup conda environment for building
    - cmd: set "PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\scripts;%PATH%"
    - cmd: set PYTHONUNBUFFERED=1

    # update mysy2
    - C:\msys64\usr\bin\bash -lc "pacman --needed --noconfirm -Sy pacman-mirrors"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -Sy"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S zstd"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S autoconf automake bison flex"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S libxml2-devel zip xz"


    # also install a msvc build environment -> use libxml2 from conda-forge
    # updating conda always updates python, even with "no-update-deps" and
    # updating python takes ages on appveyor... So just keep the shorter PATH
    # workaround for the activate failure and don't update conda itself...
    #- cmd: conda update conda --no-update-dependencies
    - cmd: conda config --add channels conda-forge
    - cmd: conda config --set show_channel_urls yes
    - cmd: conda config --set always_yes true
    - cmd: if [%MSVC_VERSION%] NEQ [NONE] conda install --quiet libxml2 python=%PYTHON_VERSION%
    - cmd: conda info -a

    # Now start with the build: first the msys2 based one
    - cmd: bash bootstrap.sh
    - cmd: bash configure --enable-verify-finally

    # now make the msvc-specific distribution
    - cmd: if [%MSVC_VERSION%] NEQ [NONE] make msvc
    - cmd: if [%MSVC_VERSION%] NEQ [NONE] cd igraph-*-msvc

    # and run the build (use make or msbuild.exe, depending on whether we use MSVC)
    - cmd: if %MSVC_VERSION%==NONE make
    - cmd: if %MSVC_VERSION%==14 call "%VS140COMNTOOLS%\vsvars32.bat"
    - cmd: if %MSVC_VERSION%==14 devenv /upgrade igraph.vcproj
    - cmd: if %MSVC_VERSION%==14 msbuild.exe igraph.vcxproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test_script:
    - cmd: cd "%APPVEYOR_BUILD_FOLDER%"
    - cmd: set "PATH=%APPVEYOR_BUILD_FOLDER%\src\.libs;%PATH%"
    - cmd: path
    - cmd: if %MSVC_VERSION%==NONE make check

on_failure:
    - cmd: echo zipping everything after a failure...
    - cmd: cd "%APPVEYOR_BUILD_FOLDER%"
    - cmd: 7z a failed_state.zip . |grep -v "Compressing"
    - cmd: appveyor PushArtifact failed_state.zip
