function(print_bool VAR HEADING)
  if(${VAR})
    set(LABEL "yes")
  else()
    set(LABEL "no")
  endif()
  print_str(${VAR} ${HEADING} ${LABEL})
endfunction()

function(print_str VAR HEADING LABEL)
  string(LENGTH "${HEADING}" HEADING_LENGTH)
  math(EXPR REMAINING_WIDTH "30 - ${HEADING_LENGTH}")

  if("${LABEL}" STREQUAL "")
    pad_string(PADDED ${REMAINING_WIDTH} " " "${ARGN}")
  else()
    pad_string(PADDED ${REMAINING_WIDTH} " " "${LABEL}")
  endif()

  message(STATUS "${HEADING}: ${PADDED}")
endfunction()

#############################################################################

set(ALL_DEPENDENCIES ${REQUIRED_DEPENDENCIES} ${OPTIONAL_DEPENDENCIES})
list(SORT ALL_DEPENDENCIES CASE INSENSITIVE)

message(STATUS " ")
message(STATUS "-----[ Build configuration ]----")
print_str(PACKAGE_VERSION "Version" "${PACKAGE_VERSION}")
print_str(CMAKE_BUILD_TYPE "CMake build type" "${CMAKE_BUILD_TYPE}" "default")
if(BUILD_SHARED_LIBS)
  message(STATUS "Library type:             shared")
else()
  message(STATUS "Library type:             static")
endif()

message(STATUS " ")
message(STATUS "----------[ Features ]----------")
print_bool(IGRAPH_GLPK_SUPPORT "GLPK for optimization")
print_bool(IGRAPH_GMP_SUPPORT "GMP for big integers")
print_bool(IGRAPH_GRAPHML_SUPPORT "Reading GraphML files")
message(STATUS " ")

message(STATUS "--------[ Dependencies ]--------")
foreach(DEPENDENCY ${ALL_DEPENDENCIES})
  print_bool(${DEPENDENCY}_FOUND "${DEPENDENCY}")
endforeach()
message(STATUS " ")

message(STATUS "----------[ Debugging ]---------")
print_str(USE_SANITIIZER "Sanitizers" "${USE_SANITIZER}" "none")
print_bool(IGRAPH_VERIFY_FINALLY_STACK "Verify 'finally' stack")

message(STATUS " ")

set(MISSING_DEPENDENCIES)
foreach(DEPENDENCY ${REQUIRED_DEPENDENCIES})
  if(NOT ${DEPENDENCY}_FOUND)
    list(APPEND MISSING_DEPENDENCIES ${DEPENDENCY})
  endif()
endforeach()

if(MISSING_DEPENDENCIES)
  list(JOIN MISSING_DEPENDENCIES ", " GLUED)
  message(FATAL_ERROR "The following dependencies are missing: ${GLUED}")
else()
  message(STATUS "igraph configured successfully.")
  message(STATUS " ")
endif()
